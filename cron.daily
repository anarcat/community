#! /bin/sh -e

# this script will run borg backups with a predefined exclusion list
# and some options
#
# it will also check to see if the external drive is mounted
# beforehand, to avoid filling up /media with a new backup, filling up
# the / directory.
#
# this script should not exist. there should instead be a borg cron
# subcommand that reads a config file and "borg cron" would then do
# the right thing.
#
# that would need to be implemented in borg/archiver.py, with a hook
# in run() and a def do_cron() that would call do_create() and others.
#
# unfortunately, upstream has showed hostility towards the idea (see
# #315) so it remains as a half-assed shell script for now.
#
# see also:
#
# * https://github.com/borgbackup/borg/issues/315
# * https://github.com/borgbackup/borg/issues/271
# * https://github.com/borgbackup/borg/issues/326
#
# this was originally written to replace bup, or more precisely, my
# wrapper named `bup-cron`
#
# features missing from bup-cron:
#
# * filesystem snapshots
# * parity blocks
# * syslog - support still missing from borg, although a logging
#   config file could be written to send stuff to syslog there's
#   no --syslog flag
# * timing information, although --stats does some of that

# this is the UUID of the underlying "BOOK" device
DEVICEID=a9b49f67-cf6d-4e0b-990c-126272f3aefd
# the device we expect to have the crypted filesystem
DEVICE=sdc2

# no servicable parts below
mountpoint=$(findmnt -n -f -o TARGET /dev/disk/by-uuid/$DEVICEID || true)
REPOSITORY="$mountpoint/borg"

# check for more recent bup in /usr/local/
PATH=$PATH:/usr/local/bin

# custom tag for manual backups
tag=${1:-auto}

# this is how you bootstrap the repo
# borg init $REPOSITORY # todo: -e keyfile?

if [ ! -d $REPOSITORY ]; then
  mail -s "backups failed" root <<EOF
$REPOSITORY not found, possibly that our device is not mounted

i tried:

    findmnt -n -f -o TARGET /dev/disk/by-uuid/$DEVICEID

to find the mountpoint, and failed.

try this to fix the situation:

    sudo pmount $DEVICE

nightly backups failed, you're own you're own buddy.

email fired from $0
EOF
else
  export BORG_RELOCATED_REPO_ACCESS_IS_OK=yes
  borg create --one-file-system                  \
      --verbose                                  \
      --stats                                    \
      $REPOSITORY::$(hostname)-$tag-$(date +%Y-%m-%d) \
      / /boot /usr /var /home                    \
      --exclude-caches                           \
      --exclude-if-present ".nobackup"           \
      --keep-tag-files                           \
      --exclude "/home/*/.cache"                 \
      --exclude "*/.Trash-*"                     \
      --exclude "*/[Cc]ache/*"                   \
      --exclude "*/.bitcoin/blocks/*"            \
      --exclude "*.vmdk"                         \
      --exclude "/tmp/*"                         \
      --exclude "*/build-area/*"                 \
      --exclude "/proc/*"                        \
      --exclude "/dev/*"                         \
      --exclude "/sys/*"                         \
      --exclude "/var/cache/*"                   \
      --exclude "/var/tmp/*"                     \
      --exclude "/home/*/.irssi/irclogs/"        \
      --exclude "/var/log/*"
  borg create --verbose --stats \
      $REPOSITORY::$(hostname)-logs$1-$(date +%Y-%m-%d) \
      /var/log/ /home/*/.irssi/irclogs
  borg prune --verbose --list -d 30 -w 52 -y 10 --prefix "$(hostname)-auto-" .
  borg prune --verbose --list -d 7 --prefix "$(hostname)-logs-" .
fi
